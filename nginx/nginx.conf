server {
    listen [::]:8000 http2 ipv6only=on; 
    listen 8000 http2; 
    charset     utf-8;

    server_name rnatango.cs.put.poznan.pl;
    client_max_body_size 75M;   # adjust to taste
  
    location /.well-known/acme-challenge {
        root /var/letsencrypt;
    } 

    location /ws/ {
        proxy_pass http://web:8080;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location / {
        root   /usr/share/nginx/html;
        try_files  $uri $uri.html /index.html;
        index  index.html index.htm;
    }

    location /api {
        # rewrite ^/api(/.*)$ $1 last;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout       360;
        proxy_send_timeout          360;
        proxy_read_timeout          360;
        send_timeout                360;

        proxy_pass http://web:8080;
        proxy_buffering off;
        proxy_redirect off;
        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Methods' 'GET, PUT, OPTIONS, POST, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Amz-Date';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        }
        if ($request_method = 'POST') {
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
     }
    }
    error_page 404 /custom_404.html;
    location = /custom_404.html {
            root /usr/share/nginx/html;
            internal;
    }

    error_page 500 502 503 504 /custom_50x.html;
    location = /custom_50x.html {
            root /usr/share/nginx/html;
            internal;
    }
}
